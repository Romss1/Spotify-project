version: '3.8'

services:
  db:
    container_name: db_spotify
    image: postgres:alpine3.17
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: "no"
    environment:
      POSTGRES_PASSWORD: spotify
      POSTGRES_USER: spotify
    ports:
      - "5432:5432"
    networks:
      - dev
      - web-proxy

  php-fpm:
    container_name: php_spotify
    build:
      context: ./php-fpm
    depends_on:
      - db
      - rabbitmq
    extra_hosts:
        - host.docker.internal:host-gateway
    volumes:
      - ./../app/:/var/www
    env_file:
      - ../app/.env
    networks:
      - dev
      - web-proxy


  nginx:
    container_name: nginx_spotify
    image: nginx:alpine3.17
    volumes:
      - ./../app/:/var/www
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites/:/etc/nginx/sites-available
      - ./nginx/conf.d/:/etc/nginx/conf.d
      - ./logs:/var/log
    depends_on:
      - php-fpm
    command:
      - nginx
    ports:
      - "8080:80"
      - "443:443"
    networks:
      web-proxy:

  redis:
    container_name: redis_spotify
    image: redis:alpine3.17
    ports:
      - "6379:6379"
    networks:
      - dev
      - web-proxy

  rabbitmq:
    container_name: rabbit_spotify
    image: rabbitmq:3.12.3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
#    environment:
#      RABBITMQ_DEFAULT_USER: guest
#      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rmq-data:/var/lib/rabbitmq
    networks:
      - web-proxy
      - dev


networks:
  dev:
  web-proxy:

volumes:
  db-data:
  rmq-data: